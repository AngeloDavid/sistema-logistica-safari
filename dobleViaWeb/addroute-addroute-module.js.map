{"version":3,"sources":["webpack:///./src/app/addroute/addroute.module.ts","webpack:///./src/app/addroute/addroute.page.html","webpack:///./src/app/addroute/addroute.page.scss","webpack:///./src/app/addroute/addroute.page.ts"],"names":[],"mappings":"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","file":"addroute-addroute-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AddroutePage } from './addroute.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddroutePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [AddroutePage]\n})\nexport class AddroutePageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"danger\\\">\\n      <ion-buttons slot=\\\"start\\\" (click)=\\\"gotoaddRoute()\\\" >\\n          <ion-button router-direction=\\\"back\\\" >\\n              <ion-icon slot=\\\"icon-only\\\" name=\\\"close\\\"></ion-icon>\\n          </ion-button>      \\n      </ion-buttons>\\n    <ion-title>Programar Recorido</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n    <form (ngSubmit)=\\\"save()\\\">\\n        <ion-list>\\n          <ion-item>\\n              <ion-icon name=\\\"calendar\\\" slot=\\\"start\\\"></ion-icon>\\n              <ion-label position=\\\"stacked\\\" >Fecha</ion-label>\\n              <ion-datetime display-format=\\\"DD/MMM/YYYY\\\" cancelText=\\\"Cancelar\\\" doneText=\\\"Guardar\\\"\\n              monthShortNames=\\\"Ene, Feb, Mar, Apr, May, Jun, Jul, Ago, Sep, Oct, Nov, Dic\\\"\\n              [(ngModel)]=\\\"logistica.FECHA_LOG\\\" name=\\\"logistica.FECHA_LOG\\\" mode=\\\"ios\\\"\\n              min=\\\"{{  now.format('YYYY-MM-DD') }}\\\"\\n              ></ion-datetime>\\n          </ion-item>\\n          <ion-item>\\n              <ion-icon name=\\\"time\\\" slot=\\\"start\\\"></ion-icon>\\n              <ion-label position=\\\"stacked\\\" >hora</ion-label>\\n              <ion-datetime display-format=\\\"hh:mm A\\\"  doneText=\\\"Guardar\\\" cancelText=\\\"Cancelar\\\"\\n              [(ngModel)]=\\\"logistica.TURNO_LOG \\\" name=\\\"logistica.TURNO_LOG\\\"  mode=\\\"ios\\\" max=\\\"12:00\\\"\\n              ></ion-datetime>\\n          </ion-item>\\n          <ion-item>\\n              <ion-icon name=\\\"git-compare\\\" slot=\\\"start\\\"></ion-icon>\\n              <ion-label position=\\\"stacked\\\" >Tipo de Viaje</ion-label>\\n              <ion-select  ok-text=\\\"Guardar\\\" cancel-text=\\\"Cancelar\\\"\\n                 interface=\\\"popover\\\" [(ngModel)]=\\\"logistica.TIPO\\\" name=\\\"logistica.TIPO\\\" >\\n                  <ion-select-option value=\\\"I\\\">Ingreso</ion-select-option>\\n                  <ion-select-option value=\\\"S\\\">Salida</ion-select-option>              \\n              </ion-select>\\n          </ion-item>          \\n          <ion-item>\\n              <ion-icon name=\\\"list-box\\\" slot=\\\"start\\\"></ion-icon>\\n              <ion-label position=\\\"stacked\\\" >Mensaje</ion-label>\\n              <ion-textarea rows=\\\"4\\\" cols=\\\"20\\\" placeholder=\\\"Rerefencias del lugar\\\" \\n              clearOnEdit=\\\"true\\\" [(ngModel)]=\\\"logistica.OBSERVACION_CLIENTE\\\" name=\\\"logistica.OBSERVACION_CLIENTE\\\"\\n              ></ion-textarea>\\n          </ion-item>          \\n        </ion-list>\\n        <ion-list *ngIf=\\\"false\\\">\\n            <ion-item>\\n                <ion-icon name=\\\"copy\\\" slot=\\\"start\\\"></ion-icon>\\n                <ion-label >Repetir la programaci√≥n</ion-label>\\n                <ion-toggle color=\\\"primary\\\" [(ngModel)]=\\\"isrepeat\\\" name=\\\"isrepeat\\\" ></ion-toggle>\\n              </ion-item>\\n              <ion-item *ngIf=\\\"isrepeat\\\">\\n                <ion-icon name=\\\"calendar\\\" slot=\\\"start\\\"></ion-icon>\\n                <ion-label position=\\\"stacked\\\" >Fecha Final</ion-label>\\n                <ion-datetime display-format=\\\"DD/MMM/YYYY\\\" cancelText=\\\"Cancelar\\\" doneText=\\\"Guardar\\\"\\n                monthShortNames=\\\"Ene, Feb, Mar, Apr, May, Jun, Jul, Ago, Sep, Oct, Nov, Dic\\\"\\n                mode=\\\"ios\\\" [(ngModel)]=\\\"dateendst\\\" name=\\\"dateendst\\\" [min]=\\\"logistica.FECHA_LOG\\\"\\n                ></ion-datetime>\\n            </ion-item> \\n        </ion-list>\\n        <ion-button icon-start  color=\\\"primary\\\" expand=\\\"full\\\" size=\\\"large\\\"  type=\\\"submit\\\">                  \\n            <ion-icon name=\\\"send\\\"></ion-icon>\\n            Enviar\\n          </ion-button>\\n      </form>\\n</ion-content>\\n\"","module.exports = \"ion-toolbar {\\n  background-color: #ff0000;\\n  color: white; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {AlertController, Events, LoadingController} from '@ionic/angular';\nimport {Logistic} from '../../interfaces/index';\nimport { Storage } from '@ionic/storage';\nimport { RouteService } from '../api/route.service';\nimport * as moment from 'moment';\nimport { runInThisContext } from 'vm';\n@Component({\n  selector: 'app-addroute',\n  templateUrl: './addroute.page.html',\n  styleUrls: ['./addroute.page.scss'],\n})\nexport class AddroutePage implements OnInit {\n\n  // event = { title: '', location: '', message: '', startDate: '', endDate: '' };\n  datenow = new Date();\n  dateend = new Date();\n  dateendst: any;\n  now = moment();\n  isnew = true;\n  logistica: Logistic = {\n    CODIGO_LOG: '',\n    CODIGO_CLIE: '',\n    CODIGO_NOMINA: '',\n    TIPO: 'I',\n    FECHA_LOG: this.datenow.toISOString(),\n    TURNO_LOG: this.datenow.toISOString(),\n    OBSERVACION_CLIENTE: ''\n  };\n  Listlg: Logistic [];\n  indexlg: number;\n  isrepeat: boolean;\n  // constructor\n  constructor(private router: Router,\n    private routeParms: ActivatedRoute,\n    public loadCtrl: LoadingController,\n    public alertCtrl: AlertController,\n    public routerserv: RouteService,\n    private storage: Storage) {\n      this.storage.get('userlogin').then((val) => {\n        this.logistica.CODIGO_CLIE = val.CODIGO_CLIE;\n        this.logistica.CODIGO_NOMINA = val.CODIGO_NOMINA;\n        this.logistica.FECHA_LOG  = moment(this.now.format(), moment.ISO_8601).format();\n        this.logistica.TURNO_LOG  = moment(this.now.format(), moment.ISO_8601).format();\n      });\n      this.isrepeat = false;\n      this.dateend.setDate(this.datenow.getDate() + 1 );\n      this.dateendst = this.dateend.toISOString ();\n   }\n\n  ngOnInit() {\n    // revisar listlog si es necesario\n    this.storage.get('listlog').then( (val) => {\n      this.Listlg = val != null ? val : new Array();\n     /// console.log (this.Listlg );\n      this.routeParms.params.subscribe(( data: any) => {\n        // console.log(data);\n        if (data.action === 'edit') {\n          this.isnew = false;\n          this.Listlg.forEach((element: any) => {\n            if (element.CODIGO_LOG === data.CODIGO_LOG) {\n              this.logistica = element;\n            }\n          });\n        } else {\n          const fecha = new Date(data.dateNow);\n          fecha.setHours(0);\n          fecha.setMinutes(0);\n          fecha.setSeconds(0);\n          this.datenow = fecha;\n          this.isnew = true;\n          this.logistica.FECHA_LOG = fecha.toISOString();\n        }\n      });\n    });\n  }\n  gotoaddRoute() {\n    this.router.navigate(['members', 'list', { refreshlist: 1 } ]);\n  }\n\n  async save() {\n    const alert = await this.loadCtrl.create({\n      message: `Enviando ...`,\n      spinner: 'bubbles'\n    });\n\n    await alert.present();\n    // this.logistica.CODIGO_LOG = '000' + (this.indexlg + 1);\n    const fecha1 = new Date(this.logistica.TURNO_LOG);\n    const fecha2 = new Date(this.logistica.FECHA_LOG);\n    fecha2.setHours(fecha1.getHours(), fecha1.getMinutes(), 0 , 0);\n    this.logistica.FECHA_LOG  = moment(fecha2, moment.ISO_8601).format();\n    if ( this.isnew ) {\n      // repetir programacion -- arreglar fecha\n      if ( false) {\n        const fecha3 = new Date(this.dateendst);\n        console.log(fecha3);\n        const dif = fecha3.getDate() - fecha2.getDate();\n        console.log('Datos' , dif, fecha3.getDate() , fecha2.getDate());\n        if (dif > 0) {\n          const log: Logistic = {\n            CODIGO_LOG : this.logistica.CODIGO_LOG,\n            CODIGO_CLIE : this.logistica.CODIGO_CLIE,\n            OBSERVACION_CLIENTE : this.logistica.OBSERVACION_CLIENTE,\n            TIPO : this.logistica.TIPO,\n            FECHA_LOG :  moment(fecha2, moment.ISO_8601).format(),\n            TURNO_LOG : moment(fecha2, moment.ISO_8601).format(),\n            CODIGO_NOMINA : this.logistica.CODIGO_NOMINA\n          };\n          for (let index = 0 ; index <= dif; index++) {\n            // this.Listlg.push(log);\n            // console.log(this.Listlg, index, log);\n            console.log(log);\n            log.FECHA_LOG = moment(fecha2, moment.ISO_8601).format();\n            log.TURNO_LOG = moment(fecha2, moment.ISO_8601).format();\n            log.CODIGO_LOG = '000' + ( this.indexlg + index + 1 ) ;\n            fecha2.setDate(fecha2.getDate() + 1);\n          }\n        }\n      } else {\n        // servicio para insertar registros\n        this.routerserv.addLogist(this.logistica).subscribe((data: any) => {\n          console.log(data);\n          if (data.CODE === 200) {\n            this.logistica.CODIGO_LOG = data.NUM_RECORRIDO;\n            console.log('index log', this.logistica );\n            this.Listlg.push(this.logistica);\n            this.storage.set('listlog', this.Listlg);\n            alert.dismiss();\n            this.presentAlert('FELICIDADES', data.MSG, true);\n          } else {\n            alert.dismiss();\n            this.presentAlert('ERROR', data.MSG, false);\n          }\n        }, (error: any) => {\n          alert.dismiss();\n          this.presentAlert('ERROR', 'Problemas de conexion con el servidor', false);\n          }\n        );\n      }\n    } else {\n      this.Listlg.forEach(elet => {\n        if (elet.CODIGO_LOG === this.logistica.CODIGO_LOG) {\n          console.log('edut', this.logistica);\n          elet = this.logistica;\n        }\n      });\n    }\n  }\n\n  // parametros: titulo, mensaje, ir a lista = true\n  async presentAlert(title: string, ms: string, gotoList: boolean) {\n    const alert = await this.alertCtrl.create({\n      subHeader: title,\n      message: ms,\n      mode: 'ios',\n      buttons: [\n        {\n          text: 'OK',\n          handler: () => {\n            if (gotoList) {\n              this.router.navigate(['members', 'list', { refreshlist: 1, date: this.datenow } ]);\n            }\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n}\n"],"sourceRoot":""}