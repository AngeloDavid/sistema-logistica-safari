{"version":3,"sources":["webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/login.page.html","webpack:///./src/app/login/login.page.scss","webpack:///./src/app/login/login.page.ts"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule   } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \"\\n<ion-content padding class=\\\"homeback\\\" [forceOverscroll]=\\\"true\\\">\\n  <ion-grid>\\n      <ion-row justify-content-center align-items-center >\\n          <ion-col>\\n            <div text-center>\\n              <img src=\\\"assets/img/logo.png\\\" style=\\\"width: 245px; padding-top: 14%\\\">\\n            </div>\\n          </ion-col>                 \\n      </ion-row>\\n      <ion-row justify-content-center align-items-center>\\n        <ion-col >\\n            <form padding [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\" >\\n            <ion-list lines=\\\"full\\\" >        \\n                <ion-item align-self-center >\\n                    <ion-icon color=\\\"primary\\\" name=\\\"person\\\" size=\\\"large\\\" slot=\\\"start\\\"></ion-icon>\\n                    <!-- <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Usuario</ion-label> -->\\n                    <ion-input color=\\\"primary\\\" type=\\\"text\\\" name=\\\"idUser\\\" placeholder=\\\"Usuario\\\"  required [formControl]=\\\"idUser\\\" ></ion-input>\\n                </ion-item>\\n                <div *ngIf=\\\"loginForm.get('idUser').errors && loginForm.get('idUser').dirty\\\" >\\n                    <p id=\\\"form-text-err\\\" *ngIf=\\\"loginForm.get('idUser').hasError('required')\\\">* campo es requerido</p>                        \\n                </div>\\n                <ion-item >\\n                    <ion-icon color=\\\"primary\\\" name=\\\"lock\\\" slot=\\\"start\\\"></ion-icon>\\n                    <!-- <ion-label color=\\\"primary\\\" position=\\\"floating\\\">Contraseña</ion-label> -->\\n                    <ion-input color=\\\"primary\\\" type=\\\"password\\\"   required name=\\\"pwdUser\\\" placeholder=\\\"Contraseña\\\" [formControl]=\\\"pwdUser\\\"></ion-input>\\n                </ion-item>\\n                <div *ngIf=\\\"loginForm.get('pwdUser').errors && loginForm.get('pwdUser').dirty\\\" >\\n                        <p id=\\\"form-text-err\\\" *ngIf=\\\"loginForm.get('pwdUser').hasError('required')\\\">* campo es requerido</p>                        \\n                    </div>\\n              </ion-list>\\n              <ion-button color=\\\"danger\\\" size=\\\"large\\\" expand=\\\"full\\\" (click)=\\\"login()\\\" [disabled]=\\\"!loginForm.valid\\\">Ingresar</ion-button>\\n              </form>\\n        </ion-col>\\n      </ion-row>\\n  </ion-grid>\\n    \\n\\n</ion-content>\\n\"","module.exports = \"ion-row {\\n  vertical-align: center;\\n  padding-top: 1.6em; }\\n\\n.homeback {\\n  --background: url('fondo.jpg') !important;\\n  background-repeat: repeat;\\n  background-position: left top;\\n  -webkit-background: url('fondo.jpg') !important;\\n  -moz-background: url('fondo.jpg') !important;\\n  -webkit-background-repeat: repeat;\\n  -webkit-background-position: left top;\\n  padding-bottom: 0 !important; }\\n\\nform {\\n  background: #fff;\\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19); }\\n\\n#form-text-err {\\n  color: #ff0000;\\n  padding-left: 42px;\\n  font-size: 0.9em;\\n  margin-top: 4%;\\n  margin-bottom: 3%; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport {UserService} from '../api/user.service';\nimport {User} from '../../interfaces/user';\nimport { Storage } from '@ionic/storage';\nimport { Router } from '@angular/router';\nimport {AuthGuard1 } from '../api/authGuard1.service';\nimport {AuthGuard } from '../api/authGuard.service';\nimport {AlertController, LoadingController, Events, ModalController} from '@ionic/angular';\nimport {FormBuilder, FormGroup, Validators, AbstractControl} from '@angular/forms';\nimport {MpChangePwdPage} from '../mp-change-pwd/mp-change-pwd.page';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  user: User;\n  loginForm: FormGroup;\n  idUser: AbstractControl;\n  pwdUser: AbstractControl;\n  constructor( private userSer: UserService, public events: Events, public modalController: ModalController,\n    private storage: Storage, private router: Router, private alertCtrl: AlertController, private fb: FormBuilder,\n    public loadCtrl: LoadingController,\n    public authguard1: AuthGuard1,\n    public authguard: AuthGuard) {\n      this.loginForm = fb.group({\n        'idUser' : ['', Validators.compose([Validators.required])],\n        'pwdUser' : ['', Validators.compose([Validators.required])],\n      });\n      this.idUser = this.loginForm.controls['idUser'];\n      this.pwdUser = this.loginForm.controls['pwdUser'];\n     }\n  ngOnInit() {\n  }\n  async login() {\n    const cargando = await this.loadCtrl.create({\n      message: `Ingresando ...`,\n      spinner: 'bubbles'\n    });\n    await cargando.present();\n    console.log('loginuser', this.idUser);\n    this.userSer.loginUser(this.idUser.value, this.pwdUser.value).subscribe(\n      (res: any) => {\n        if ( res.CODE === 400) {\n          cargando.dismiss();\n          this.msgmostrar(res.MSG, 'Error de ingreso');\n        } else {\n          this.user = res.value[0];\n          this.user.USUARIO_APP = this.idUser.value;\n          this.storage.set('userlogin', this.user);\n          this.events.publish('userlogin', this.user);\n          if ( this.user.CAMBIAR_PASSWD === '0' ) {\n            this.CambiarPwd();\n          }\n          cargando.dismiss();\n          this.authguard1.setEnablelogin(false);\n          this.authguard.setEnablelogin(true);\n          this.router.navigateByUrl('/members/home');\n          this.loginForm.reset();\n        }\n      },\n      err => {\n        cargando.dismiss();\n        this.msgmostrar('Intente de nuevo por favor', 'Error de conexion');\n      });\n  }\n  async  msgmostrar( msg: string , title: string) {\n    const alert = await this.alertCtrl.create({\n        header: title,\n        message: msg,\n        buttons: ['OK']\n    });\n    await alert.present();\n  }\n\n  async CambiarPwd() {\n    const modal = await this.modalController.create({\n      component: MpChangePwdPage,\n      componentProps: { value: this.user.CODIGO_NOMINA, origin : 'login' }\n    });\n    return await modal.present();\n  }\n\n}\n"],"sourceRoot":""}